name: Infra - Validate & Plan

on:
  workflow_dispatch: # enables manual execution
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'LICENSE'
      - 'CONTRIBUTING.md'
      - '.tool-versions'
      - '.gitignore'
      - 'Makefile'
      - '**/docs/**'

concurrency: # set other jobs with the same 'group' in a queue
  group: platform-infra
  cancel-in-progress: false

permissions:
  id-token: write # allow creation of openid connect token
  contents: read  # allow read repository's content by steps

env:
  tf_version: '1.9.8'
  tg_version: '0.68.6'
  working_dir: '.'

jobs:
  validate:
    name: Infra - Validate & Plan
    runs-on: ubuntu-latest
    timeout-minutes: 10 # avoid using gitHub runners time
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        infra_env: [dev]
        region: [us-east-1]

    environment: ${{ matrix.infra_env }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-region: ${{ matrix.region }}
          role-session-name: github-actions-oidc-session
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Lint
        id: lint
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      - name: Init
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run-all init --terragrunt-non-interactive
        env:
          ORG_NAME: ${{ vars.ORG_NAME }}
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}

      - name: Validate
        id: validate
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run-all validate --terragrunt-non-interactive
        env:
          ORG_NAME: ${{ vars.ORG_NAME }}
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: | 
            run-all plan --terragrunt-non-interactive
        env:
          ORG_NAME: ${{ vars.ORG_NAME }}
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}
          TF_VAR_kube_data_auth_enabled: true
