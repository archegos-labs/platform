name: Infra - Validate & Plan

on:
  workflow_dispatch: # enables manual execution
  push:
    branches: [ $default-branch ]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  id-token: write      # allow creation of openid connect token
  contents: read       # allow read repository's content by steps
  pull-requests: write # allow adding comments in a pull request

env:
  tf_version: '1.9.8'
  tg_version: '0.68.6'
  working_dir: '.'

jobs:
  validate:
    name: Infra - Validate & Plan
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Avoid using GitHub Runners time
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        infra_env: [dev]
        region: [us-east-1]
    environment: ${{ matrix.infra_env }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ matrix.region }}
          role-session-name: github-actions-oidc-session
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Lint
        id: lint
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2.1.4
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      - name: Init
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2.1.4
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run-all init
              --terragrunt-non-interactive 
              --terragrunt-no-color
              --terragrunt-exclude-dir eks/addons/vpc-cni 
              --terragrunt-exclude-dir flux/base
              --terragrunt-exclude-dir flux/terraform-controller
        env:
          DEPLOYMENT:  archegos-${{ matrix.infra_env }}-${{ matrix.region }}

      - name: Validate
        id: validate
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2.1.4
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run-all validate
              --terragrunt-non-interactive 
              --terragrunt-no-color
              --terragrunt-exclude-dir eks/addons/vpc-cni 
              --terragrunt-exclude-dir flux/base
              --terragrunt-exclude-dir flux/terraform-controller
        env:
          DEPLOYMENT:  archegos-${{ matrix.infra_env }}-${{ matrix.region }}

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2.1.4
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: | 
            run-all plan
              --terragrunt-non-interactive 
              --terragrunt-no-color
              --terragrunt-exclude-dir eks/addons/vpc-cni 
              --terragrunt-exclude-dir flux/base
              --terragrunt-exclude-dir flux/terraform-controller
        env:
          DEPLOYMENT:  archegos-${{ matrix.infra_env }}-${{ matrix.region }}

      - name: Post Plan to PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })