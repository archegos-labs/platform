name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  tf_version: '1.9.8'
  tg_version: '0.68.6'
  working_dir: '.'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Lint
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'


  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      fail-fast: true
      matrix:
          infra_env: [dev]
          region: [us-east-1]
    environment: ${{ matrix.infra_env }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: | 
            run-all plan \
            --terragrunt-iam-role ${{ secrets.AWS_ROLE_ARN }} \
            --terragrunt-exclude-dir eks/addons/vpc-cni \
            --terragrunt-exclude-dir flux/terraform-controller
        env:
          DEPLOYMENT:  archegos-${{ matrix.infra_env }}-${{ matrix.region }}